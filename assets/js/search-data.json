{
  
    
        "post0": {
            "title": "Lab #1   Measurements And Graphical Analysis",
            "content": "Lab #1: Measurements and Graphical Analysis . Purpose Statement: Given “disks” of different radii, determine the relationship between the mass and radius of the disks through a graphical method. In using graphical methods, we will learn about linearization and the use of it to create a mathematical model. . Procedure: . Fold disks in half. . | Measure the diameter. . | Divide the diameter in half to find the radius. . | Record data. . | Unfold the disk. . | Weight the disks on the scale and record data. . | Fold a disk until it is one millimeter thick. . | Divide one millimeter by the number of layers the disk now has to get the thickness. . | Record data. . | Questions: . What is the precision of the meterstick I used? . | The precision of the meter stick is up to 0.1 millimeter. . Explain how you know this based on the data I provided. . | We know this because the meter stick that was given to us goes to the millimeter. This means that when measuring something, it is usually measured in one below the exact level of precision. . Mass and Radius Measurements .   Radius (cm) Mass (g) Thickness (cm)   Radius Squared (cm2) . Disk 1 | 2.35 cm | 0.08g | 0.0015625 cm |   | 5.5225 | . Disk 2 | 3.20 cm | 0.14g | 0.0015625 cm |   | 10.24 | . Disk 3 | 4.10 cm | 0.23g | 0.0015625 cm |   | 16.81 | . Disk 4 | 5.25 cm | 0.38g | 0.0015625 cm |   | 27.5625 | . Disk 5 | 6.90 cm | 0.70g | 0.0015625 cm |   | 47.61 | . Graph 1 (Mass vs Radius): y = 0.018867x2 - 0.039x + 0.069478 . Mass vs Radius . . x-axis: radius (r) . y-axis: mass (m) . Graph 2 (Mass vs. Radius Squared, linearized): y = 0.014763x - 0.012136 . Mass vs. Radius Squared . . x-axis: radius squared (r2; also represented with c here) . y-axis: mass (m) . Calculations: . p = m/v → m = pv . v = π * r2 * h . constants . m = p * π * r2 * h → cm = (g/cm3) * π * cm2 * cm → cm = (g/cm3) * π * cm * cm2 → Equation 4: m = r2 . Analysis Questions: . What is the independent variable in your y = mx +b formula? . | The independent variable in the linearized graph is the radius squared (r2). This is because the mass of the disk depends on how large the disk is, which is measured with the radius. . What does the slope represent in your y = mx +b formula? Show dimensionally that indeed that is what your slope represents and that the formula is valid dimensionally. . | The slope of the linearized graph represents the proportional relationship between the mass of the disks and the radius of the disks, squared. This is because when the original graph, which shows the relationship between mass and radius, is linearized, it is found that mass and the radius squared are proportional. This is derived below. This means that the units of the slope are g/cm2. When this is put into the linear equation, it can be derived that mass is equal to mass, which proves the relationship is valid dimensionally. . Calculations: . Density: p = m/v → m = pv Volume: v = π * r2 * h . constants . m = p * π * r2 * h → cm = (g/cm3) * π * cm2 * cm → cm = (g/cm3) * π * cm * cm2 . Equation 4: m = r2 . y = mx + b → g = g/cm2 * cm2 + g → g = g + g → g = g . Should the “b” in your y = mx + b formula be zero? Explain your answer. . | The “b” of the linearized graph has to go through zero because theoretically, a circle with a radius of 0 will ultimately have a mass of 0. Experimentally this isn’t possible however because of data that is not precise. . Measure/estimate the “thickness” of your cylinders. Use that value to find the experimental density of your cylinders. Find a percent difference between your found density and the actual density. The actual material is aluminum. . | Average Radius: (2.35 cm + 3.20 cm + 4.10 cm + 5.25 cm + 6.90 cm) / 5 = 4.36 cm . Average Mass: (0.08 g + 0.14 g + 0.23 g + 0.38 g + 0.70 g) / 5 = 0.306 g . Volume: 0.0015625 cm * (4.36 cm)2 * π = 0.093313 cm3 . Density: 0.306 g / 0.093313 cm3 = 3.28 g/cm3 . Percent Error: ( | 3.28 g/cm3 - 2.7 g/cm³ | / | 2.7 g/cm³ | ) * 100 = 21.48% | . Errors. Make sure you explain why your number is bigger or smaller than (if positive or negative difference.) . | Our number is smaller because our measured thickness is too thick. This is because the thickness of our materials that the disks are made of is really difficult to measure. This is because our material is aluminum foil and aluminum foil is very thin and hard to measure with a meter stick. We found that our disk measurements are too thin because if the thickness is increased, the volume that will be calculated is larger and when that volume is used to calculate the density, the larger volume value will decrease the final density value if all other variables stay constant. This is why our experimental value is larger than the theoretical value. . Synthesis Questions: . In this experiment, if we had used disks with a greater thickness, would the slope of your best fit line have been different? Would your experimental value for density be the same? Explain. . | The slope of the line of best fit would’ve probably been more aligned with the experimental values. This means that the experimental value for density would be closer to the theoretical value because the chance of error while measuring the thickness of the disks would be less. . How would your graph of m versus r2 be different if you had used disks of the same thickness, but made out of steel? Draw a second line on your m versus r2 plot that represents disks made of steel. . | The slope for the linearized graph would’ve been steeper because steel has a larger density than aluminum. This means that as the radius of the disks increase, the mass would increase at a faster rate, as the disks would be heavier because of the larger density. . . Another group of students has acquired data for the exact same experiment; however, their disks are made of an unknown material that they are trying to determine. The group’s m versus r2 data produced a line of best fit with slope equal to 122 kg/m2. Each disk they measured had the same 0.5 cm thickness. Calculate the density of the unknown material and use the table below to help determine what material their disks are made of. . | . Multiple Choice Questions: . You perform the same experiment, but this time you plot a linear relationship between mass and the circumference of the disks rather than the radius. What is the slope of the linear plot? . | . Consider an experiment in which a student measures the mass and diameter of 10 different-sized spheres, all made of the same material of uniform density ρ. For this student to create a linear graph relating the mass of the sphere to its radius r, the student would need to plot mass m versus which quantity: . | .",
            "url": "https://davidvasilev1.github.io/fastpages/2022/08/26/Lab-1-Measurements-and-Graphical-Analysis.html",
            "relUrl": "/2022/08/26/Lab-1-Measurements-and-Graphical-Analysis.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "First Jupyter Notebook Test, Showcasing Python",
            "content": "Sample Python Code to Print &quot;Hello World!&quot; . var = &quot;Hello World!&quot; print(var) . Hello World! . Above you can see the output of the code. .",
            "url": "https://davidvasilev1.github.io/fastpages/trimester%201/python/2022/08/21/jupyter-notebook.html",
            "relUrl": "/trimester%201/python/2022/08/21/jupyter-notebook.html",
            "date": " • Aug 21, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://davidvasilev1.github.io/fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://davidvasilev1.github.io/fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "Trimester 1 Notes for APCSP",
          "content": "Basics . How to Enter and Code with wsl: . PS C: Users Dide&gt; wsl (base) davidv@LAPTOP-NV0422DN:/mnt/c/Users/Dide$ cd ~ (base) davidv@LAPTOP-NV0422DN:~$ cd vscode (base) davidv@LAPTOP-NV0422DN:~/vscode$ cd fastpages (base) davidv@LAPTOP-NV0422DN:~/vscode/fastpages$ code . . Go to Github to check status of all changes. . How to Create a Notebook Using Bash: . Enter vscode with wsl. . | Use these commands with python: . | echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Change repo link to my own . You can look at files in folder with this: | # You must run cells above to define variable and project echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . # You must run cells above to define variable and project echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory ls -l # list posts . # You must run cells above to define variable and project echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory ls -l # list notebooks . # You must run cells above to define notebooks location echo &quot;Look for images in notebooks, print working directory, list files&quot; cd $notebooks/images # this should exist per fastpages pwd ls -l . You can also look inside files (markdown file): | # You must run cells above to define project echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md # show contents of file, in this case markdown echo &quot;&quot; echo &quot;end of README.md&quot; .",
          "url": "https://davidvasilev1.github.io/fastpages/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "About Me",
          "content": "My goals for this year: . This year I want to learn how to create webpages with CSS, HTML, Javascript, and other coding languages. | I want to be successful in this class learning-wise and grade-wise. | I want to be prepared for AP Computer Science A, which I will take next year. | My Hobbies . One thing that I enjoy is mountain biking. | Another thing that I enjoy is making electronic music. | I also like photographing nature, mostly birds and small animals. | Another thing that I enjoy doing is playing video games in my free time. |",
          "url": "https://davidvasilev1.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  

  
  

  
  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://davidvasilev1.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}